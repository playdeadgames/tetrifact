@using Tetrifact.Core;
@using Humanizer;
@model Tetrifact.Web.PackageModel;
@{
    ViewData["Title"] = $"Package : {Model.PackageId}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" class="project" value="@Model.Project" />
<input type="hidden" class="packageId" value="@Model.PackageId" />

<div class="layout-section layout-table">

    <div class="layout-row">
        <div class="layout-label">
        </div>
        <div class="layout-value">
            <a class="button" href="/v1/archives/@Model.Project/@Model.PackageId">&#10515; Download</a>
        </div>
    </div>


    <div class="layout-row">
        <div class="layout-label">
            Project
        </div>
        <div class="layout-value">
            <a href="/projects/@Model.Project">@Model.Project</a>
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Created
        </div>
        <div class="layout-value">
            @Model.Manifest.CreatedUtc.ToLocalTime().ToString("g") (@Model.Manifest.CreatedUtc.Humanize())
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            File count
        </div>
        <div class="layout-value">
            @Model.Manifest.Files.Count
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Size
        </div>
        <div class="layout-value">
            @String.Format("{0:n0}", Model.Manifest.Size) bytes
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Size on disk
        </div>
        <div class="layout-value">
            @String.Format("{0:n0}", Model.Manifest.SizeOnDisk) bytes (@Model.Manifest.Compressed %)
            @(Model.Manifest.IsDiffed ? "" : "(diff pending)")
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Hash
        </div>
        <div class="layout-value">
            @Model.Manifest.Hash
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Info
        </div>
        <div class="layout-value">
            <a href="/v1/packages/@Model.Project/@Model.PackageId">Manifest</a>
        </div>
    </div>

    <div class="layout-row">
        <div class="layout-label">
            Functions
        </div>
        <div class="layout-value">
            <a href="javascript:void(0);" class="package-removePackage">Delete</a>
        </div>
    </div>

</div>

<div class="layout-section">
    <h2>Tags</h2>
    <div>

        <input class="newTag" type="text" placeholder="New tag" />
        <button class="button addTag">Add</button>

        <div>
            @if (Model.Manifest.Tags.Any())
            {
                <ul>
                    @foreach (string tag in Model.Manifest.Tags)
                    {
                        <li class="listItem">
                            <a class="package-removeTag" data-tag="@tag" href="javascript:void(null)">
                                <img class="package-deleteIcon" src="/icons/delete.svg" alt="Delete">
                            </a>
                            <a href="/packagesWithTag/@Model.Project/@tag">@tag</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>
                    This package is untagged.
                </p>
            }
        </div>
    </div>
</div>

<div class="layout-section">
    <div>
        <h2>Files</h2>
        @if (Model.Manifest.Files.Any())
        {
            <ul>
                @for (int i = 0; i < Model.Manifest.Files.Count; i++)
                {
                    ManifestItem file = Model.Manifest.Files[i];

                <li class="listItem">
                    <a class="listItem-icon package-download" href="/v1/files/@Model.Project/@file.Id">&#10515;</a>
                    <div class="listItem-text">
                        @(i + 1) - @file.Path
                    </div>
                </li>
                }
            </ul>
        }
        else
        {
            <text>
                None
            </text>
        }
    </div>
</div>

