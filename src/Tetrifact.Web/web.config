<?xml version="1.0" encoding="utf-8"?>
<!-- 
  Note : Web.config is primarily for debugging in Visual Studio. When deploying to production it as advisable to remove web.config entirely
  and use env variables to configure Tetrifact. Docker images are configured via env variables.
-->
<configuration>
  <system.webServer>
    <handlers>
      <add name="aspNetCore" path="*" verb="*" modules="AspNetCoreModuleV2" resourceType="Unspecified" />
    </handlers>
    <aspNetCore processPath="%LAUNCHER_PATH%" arguments="%LAUNCHER_ARGS%" stdoutLogEnabled="false" stdoutLogFile=".\logs\stdout" forwardWindowsAuthToken="false" hostingModel="InProcess">
      <environmentVariables>
        <!-- ASPNETCORE_ENVIRONMENT, IS_IIS & COMPLUS_ForceENC are added by Visual studio and can be ignored -->
        <environmentVariable name="ASPNETCORE_ENVIRONMENT" value="Development" />
        <environmentVariable name="IS_IIS" value="true" />
        <environmentVariable name="COMPLUS_ForceENC" value="1" />
        <environmentVariable name="LIST_PAGE_SIZE" value="10" />
        <environmentVariable name="AUTH_LEVEL" value="None" />
        <environmentVariable name="ACCESS_TOKENS" value="" />
      </environmentVariables>
    </aspNetCore>
    <security>
      <requestFiltering>
        <!-- increase the size of posts. This is also Visual Studio specific. -->
        <requestLimits maxAllowedContentLength="2147483647" />
      </requestFiltering>
    </security>
  </system.webServer>
</configuration>